#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#include "utils.h"
#include <cassert>
#include <cmath>


/*Задача 1
Что нужно сделать:
Написать функцию, принимающую два указателя на int и меняет местами содержимое
данных указателей.
Пример:
```
int a = 10;
int b = 20;
swap(&a, &b);
std::cout << a << “ “ << b;
// 20 10
``
[]()
**Чек-лист для проверки задачи:**
• Функция принимает корректные типы данных, тип возвращаемого значения -- void
• Функция не использует библиотек кроме<iostream>`
• Функция меняет значения по указателям
*/

void task8_1() {
  int a = 10, b = 20;
  change_pointers(&a, &b);
  std::cout << a << " " << b << "\n";
}

/*Задача 2
Что нужно сделать:
Написать функцию, которая принимает указатель на тип int, по которому
размещены 10 переменных типа int.
Функция ничего не возвращает, но по тому же указателю
элементы должны лежать в обратном порядке.

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения -- void
• Функция не использует библиотек кроме <iostream>
• По переданному указателю лежат переменные в обратном порядке

Как отправить задание на проверку
Прислать ссылку на repl.it или файл .срр с решением.

*/

void task8_2() {
  int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8 , 9, 10 };
  revers_array_with_pointers(arr, 10);
  print_array(arr, 10);
}

/*Задача 3
Что нужно сделать:
Написать функцию, которая принимает указатель на char, по которому лежит строка.
Функция должна возвращать true, если вторая строка является подстрокой первой.

Пример:

const char* a = "Hello world";
const char* b = "wor";
const char* c = "banana";
std::cout << substr(a,b) << " " << substr(a,c);
// true false

const-квалификатор
const является квалификатором типа, применяемым к переменным, значения которых нельзя изменять.
Например, если в коде написать:
const int a = 2;
то впоследствии значение переменной невозможно изменить, а запись вида
a = 3;
приведёт к ошибке компилятора.

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения -- bool
• Функция не использует библиотек кроме <iostream> и <cstring> или другую для работы со строками
• Функция корректно определяет, является ли вторая строка подстрокой первой.

*/

void task8_3() {
  const char* a = "Hello world";
  const char* b = "wor";
  const char* c = "banana";
  std::cout << substr(a, b) << " " << substr(a, c);
}