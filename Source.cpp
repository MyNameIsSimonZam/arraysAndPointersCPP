#include <iostream>
#include <string>

/*Задание 1. Многоквартирный дом

Что нужно сделать:
На вход программе поступают десять фамилий в формате строк.
Это фамилии жильцов квартир с первой по десятую.
Необходимо прочитать эти фамилии и записать в одномерный массив.
Далее пользователь вводит три номера квартир.
Необходимо вывести в консоль фамилию жильца, проживающего в этой квартире.
Если пользователь введёт некорректный номер квартиры, необходимо сообщить ему об этом.

Пример:

← SidorovA
← IvanovA
← PetrovA
← SidorovB
← IvanovB
← vPetrovB
← SidorovC
← IvanovC
← PetrovC
← SidorovD
←10
→SidorovD
←1
→SidorovA
←5
→IvanovB

Что оценивается:
• Используется массив строк для хранения данных.
• В коде не используются библиотеки, кроме <iostream> и <string>.
• Программа проверяет доступность элемента по индексу и выдаёт корректный результат.
*/

void task1() {
  std::string arrLastName[10];
  int flat;

  arrLastName[0] = "SidorovA";
  arrLastName[1] = "IvanovA";
  arrLastName[2] = "PetrovA";
  arrLastName[3] = "SidorovB";
  arrLastName[4] = "IvanovB";
  arrLastName[5] = "PetrovB";
  arrLastName[6] = "SidorovC";
  arrLastName[7] = "IvanovC";
  arrLastName[8] = "PetrovC";
  arrLastName[9] = "SidorovD";

  std::cout << "Enter a apartment number (from 1 to 10): ";
  std::cin >> flat;
  if (flat < 1 || flat > 10) std::cout << "Error... From 1 to 10 only... \n";
  else {
    std::string answer = arrLastName[flat - 1];
    std::cout << answer;
  }
}

/*Задание 2. Сортировка

Что нужно сделать:
Пользователь вводит в консоль 15 дробных чисел.
Необходимо прочитать их и вывести в консоль в порядке от большего к меньшему.
По возможности используйте минимум дополнительной памяти и проходов по массиву.

Пример:

Ввод: 1.2 2.3 1.11 3.4 5.5 5.4 5.3 5.1 1.5 1.25 5.41 5.31 5.11 1.51 1.251
Вывод: 5.5 5.41 5.4 5.31 5.3 5.11 5.1 3.4 2.3 1.51 1.5 1.251 1.25 1.2 1.11

Что оценивается:
• Используется массив чисел с плавающей точкой для хранения данных.
• В коде не используются библиотеки, кроме <iostream>.
• Программа корректно использует обращения по индексам и выдаёт правильный ответ.
• Асимптотическая сложность алгоритма не более O(n^2).
• Числа выводятся от большего к меньшему.*/

void task2() {
  float array[] = { 1.2, 2.3, 1.11, 3.4, 5.5, 5.4, 5.3, 5.1, 1.5, 1.25, 5.41, 5.31, 5.11, 1.51, 1.251 };
  for (int i = 0; i < 15 - 1; ++i) {
    int temp;
    if (array[i] < array[i + 1]) {
      temp = array[i];
      array[i] = array[i + 1];
      array[i + 1] = temp;
    }
  }
  for (int i = 0; i < 15; ++i) {
    std::cout << array[i] << " ";
  }
};


void task3() {};
void task4() {};











