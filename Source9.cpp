#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#include "utils.h"
#include <cassert>
#include <cmath>


/*Задача 1
Что нужно сделать:
Напишите функцию swapvec, принимающую std::vector<int> и указатель
на массив переменных типа int (одного размера) и обменивающую значения этих массивов.

Пример:

std::vector<int> a = {1,2,3,4};
int b[] = {2,4,6,8};
swapvec(a,b);
for(int i = 0; i < 4; ++i)
std::cout << a[i];
std::cout << std::endl;
for(int i = 0; i < 4; ++i)
std::cout << b[i];

Вывод:
2468
1234

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения — void.
• Функция не использует библиотек кроме <iostream> и <vector>.
• Функция меняет значения между объектами.
• Вектор передаётся по ссылке.
*/


void task9_1() {
  std::vector<int> a = { 1,2,3,4 };
  int b[] = { 2,4,6,8 };
  swapvec(a, b);
  for (int i = 0; i < 4; ++i)
    std::cout << a[i];
  std::cout << std::endl;
  for (int i = 0; i < 4; ++i)
    std::cout << b[i];
}

/*Задача 2
Что нужно сделать:
Кролик сидит на нулевой ступеньке большой лестницы.
Он может прыгать на одну или более ступенек вверх, но не далее чем на k.
Кролик хочет допрыгать до n-й ступеньки,
но может сделать это большим количеством способов.
Напишите рекурсивную функцию, которая принимает число n типа int
и число k — максимальную длину прыжка, а возвращает количество способов,
которым кролик может доскакать до n-й ступеньки.
В функции для аргумента “максимальная длина прыжка” задать значение,
по умолчанию равное 3.

Пример:
Ввод: 3, 2
Вывод: 3
Пояснение: (1,2), (2,1), (1,1,1)

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения — int.
• Функция не использует библиотек кроме <iostream>.
• Функция рекурсивная.
• Функция содержит значение по умолчанию.
*/

void task9_2() {

}

/*Задача 3
Что нужно сделать:
Напишите рекурсивную функцию, которая принимает большое число n типа long long
и переменную ans, а возвращает void. После завершения работы функции
в переменной ans должно оказаться количество чётных цифр в записи числа n.

Пример:

int ans;
evendigits(9 223 372 036 854 775 806, ans);
//ans == 10

Пояснение: 9 223 372 036 854 775 806

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения — void.
• Функция не использует библиотек кроме <iostream>.
• Функция рекурсивная.
• Функция содержит параметр по ссылке.
*/

void task9_3() {

}


